{"version":3,"sources":["App.jsx","index.js"],"names":["baseUrl","process","App","React","useState","userName","email","password","status","message","isRegistered","user","updateUser","onTextChange","event","name","target","value","prevState","length","class","onSubmit","preventDefault","register","url","axios","post","then","response","data","success","type","placeholder","onChange","href","onClick","className","ReactDOM","render","document","getElementById"],"mappings":"4NAKMA,EAAO,UAAMC,GAAN,SAoKEC,MAlKf,WAAgB,IAAD,EACgBC,IAAMC,SAAS,CACtCC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,OAAQ,GACRC,QAAS,GACTC,cAAc,IAPP,mBACJC,EADI,KACEC,EADF,KAUX,SAASC,EAAaC,GAClB,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAE3BL,GAAW,SAACM,GACR,OAAO,2BACAA,GADP,kBAEKH,EAAOE,OAsDpB,OACI,gCAC6B,IAAxBN,EAAKF,QAAQU,QACV,sBAAKC,MAAM,0CAAX,UACI,8BACI,oBAAIA,MAAM,6BAAV,SACI,sBAAMA,MAAM,0BAGpB,oBAAIA,MAAM,kBAAV,SAA6BT,EAAKN,WAClC,mBAAGe,MAAM,kBAAT,SACKT,EAAKD,aAAe,UAAY,YAErC,sBAAKU,MAAM,oBAAX,UACI,uBAAMA,MAAM,WAAWC,SA/D3C,SAAsBP,GAClBA,EAAMQ,iBACN,IAAMC,EAAW,CACbhB,SAAUI,EAAKJ,SACfF,SAAUM,EAAKN,SACfC,MAAOK,EAAKL,OAEVkB,EAAMxB,GAAWW,EAAKD,aAAe,SAAW,UACtDe,IAAMC,KAAKF,EAAKD,GAAUI,MAAK,SAACC,GAC5BhB,GAAW,SAACM,GAAe,IAAD,EACtB,OAAO,2BACAA,GADP,iCAEiBU,EAASC,KAAKpB,SAF/B,uBAGgBmB,EAASC,KAAKC,SAH9B,UAQRlB,GAAW,SAACM,GAAe,IAAD,EACtB,OAAO,2BACAA,GADP,kCAEkB,IAFlB,yBAGkB,IAHlB,sBAIe,IAJf,QA4CY,WAC2B,IAAtBP,EAAKD,cACF,qBAAKU,MAAM,aAAX,SACI,uBACIW,KAAK,OACLhB,KAAK,WACLiB,YAAY,WACZZ,MAAM,eACNH,MAAON,EAAKN,SACZ4B,SAAUpB,MAItB,qBAAKO,MAAM,aAAX,SACI,uBACIW,KAAK,QACLhB,KAAK,QACLK,MAAM,eACNY,YAAY,SACZf,MAAON,EAAKL,MACZ2B,SAAUpB,MAGlB,qBAAKO,MAAM,aAAX,SACI,uBACIW,KAAK,WACLhB,KAAK,WACLK,MAAM,eACNY,YAAY,WACZf,MAAON,EAAKJ,SACZ0B,SAAUpB,MAGlB,wBACIkB,KAAK,SACLX,MAAM,gCAFV,SAIKT,EAAKD,aAAL,sBAGL,mBAAGU,MAAM,8BAAT,SACI,gCACKT,EAAKD,aAAL,8CAKT,mBAAGU,MAAM,kBAAkBc,KAAK,IAAhC,SACI,uBAAOC,QAnFnC,WACIvB,GAAW,SAACM,GAAe,IAAD,EACtB,OAAO,2BACAA,GADP,kCAEkB,IAFlB,yBAGkB,IAHlB,sBAIe,IAJf,8BAKuBA,EAAUR,cALjC,QAiFoB,SACKC,EAAKD,aAAL,2BAIb,oBAAGU,MAAM,2BAAT,UACI,uDAA+B,aAMtB,IAAxBT,EAAKF,QAAQU,QACV,sBAAKiB,UAAU,iCAAf,UACI,8BAAqB,IAAhBzB,EAAKH,OAAL,sBACL,6BAAKG,EAAKF,UACV,wBACI2B,UAAU,wBACVL,KAAK,SACLI,QA1FpB,WACIvB,GAAW,SAACM,GACR,OAAO,2BACAA,GADP,4BAEiB,SAmFT,6BCxJpBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b0c8abe3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\n\r\n// const baseUrl = \"http://localhost:4000/app/\";\r\nconst baseUrl = `${process.env.PUBLIC_URL}/app/`;\r\n\r\nfunction App() {\r\n    const [user, updateUser] = React.useState({\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        status: \"\",\r\n        message: \"\",\r\n        isRegistered: false,\r\n    });\r\n\r\n    function onTextChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        updateUser((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                [name]: value,\r\n            };\r\n        });\r\n    }\r\n\r\n    function onUserSubmit(event) {\r\n        event.preventDefault();\r\n        const register = {\r\n            password: user.password,\r\n            userName: user.userName,\r\n            email: user.email,\r\n        };\r\n        const url = baseUrl + (user.isRegistered ? \"signin\" : \"signup\");\r\n        axios.post(url, register).then((response) => {\r\n            updateUser((prevState) => {\r\n                return {\r\n                    ...prevState,\r\n                    [`message`]: response.data.message,\r\n                    [`status`]: response.data.success,\r\n                };\r\n            });\r\n        });\r\n\r\n        updateUser((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                [`password`]: \"\",\r\n                [`userName`]: \"\",\r\n                [`email`]: \"\",\r\n            };\r\n        });\r\n    }\r\n\r\n    function changeStatus() {\r\n        updateUser((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                [`password`]: \"\",\r\n                [`userName`]: \"\",\r\n                [`email`]: \"\",\r\n                [`isRegistered`]: !prevState.isRegistered,\r\n            };\r\n        });\r\n    }\r\n\r\n    function onMessageChange() {\r\n        updateUser((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                [`message`]: \"\",\r\n            };\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {user.message.length === 0 && (\r\n                <div class=\"login-container text-c animated flipInX\">\r\n                    <div>\r\n                        <h1 class=\"logo-badge text-whitesmoke\">\r\n                            <span class=\"fa fa-user-circle\"></span>\r\n                        </h1>\r\n                    </div>\r\n                    <h3 class=\"text-whitesmoke\">{user.userName}</h3>\r\n                    <p class=\"text-whitesmoke\">\r\n                        {user.isRegistered ? \"Sign In\" : \"Sign Up\"}\r\n                    </p>\r\n                    <div class=\"container-content\">\r\n                        <form class=\"margin-t\" onSubmit={onUserSubmit}>\r\n                            {user.isRegistered === false && (\r\n                                <div class=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"userName\"\r\n                                        placeholder=\"Username\"\r\n                                        class=\"form-control\"\r\n                                        value={user.userName}\r\n                                        onChange={onTextChange}\r\n                                    ></input>\r\n                                </div>\r\n                            )}\r\n                            <div class=\"form-group\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"E-mail\"\r\n                                    value={user.email}\r\n                                    onChange={onTextChange}\r\n                                ></input>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    value={user.password}\r\n                                    onChange={onTextChange}\r\n                                ></input>\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                class=\"form-button button-l margin-b\"\r\n                            >\r\n                                {user.isRegistered ? `Sign In` : `Sign Up`}\r\n                            </button>\r\n\r\n                            <p class=\"text-whitesmoke text-center\">\r\n                                <small>\r\n                                    {user.isRegistered\r\n                                        ? `Don't have an account`\r\n                                        : `Have an account`}\r\n                                </small>\r\n                            </p>\r\n                            <a class=\"text-darkyellow\" href=\"#\">\r\n                                <small onClick={changeStatus}>\r\n                                    {user.isRegistered ? `Sign Up` : `Sign In`}\r\n                                </small>\r\n                            </a>\r\n                        </form>\r\n                        <p class=\"margin-t text-whitesmoke\">\r\n                            <small> Harshit Â© 2021</small>{\" \"}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {user.message.length !== 0 && (\r\n                <div className=\"h-100 p-5 text-white rounded-3\">\r\n                    <h1>{user.status === true ? `Awesome!` : `Uh oh!`}</h1>\r\n                    <h5>{user.message}</h5>\r\n                    <button\r\n                        className=\"btn btn-outline-light\"\r\n                        type=\"button\"\r\n                        onClick={onMessageChange}\r\n                    >\r\n                        Go back!\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}